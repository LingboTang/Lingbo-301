package com.example.todolist;


import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;


public class MainActivity extends Activity {


	private static final String FTodoList = "todo.sav";
	private static final String FArchive = "arch.sav";
	private static final String FText = "text.sav";
	private static final String FEmail = "mail.sav";
	private ListView listview;
	private ArrayList<Event> Events;
	private ArrayList<Event> archEvents;
	private EditText MainText;
	private ListArrange arrangetodo;
	private ListArrange arrangearch;
	private int totalEvent;
	private int totalArch;
	private ArrayList<String> theSummary;
	private ArrayAdapter<String> summaryViewAdapter;

  
    @Override  
    public void onCreate(Bundle savedInstanceState) {  
        super.onCreate(savedInstanceState);  
        setContentView(R.layout.activity_main);  
        MainText = (EditText)findViewById(R.id.body);
		listview = (ListView) findViewById(R.id.todoListView);

    }
	protected void onStart(){
		super.onStart();
		Events=new ArrayList<Event>();
		archEvents=new ArrayList<Event>();
		theSummary=new ArrayList<String>();
		totalEvent=loadItems(Events, FTodoList,totalEvent);
		totalArchItem=loadItems(archEvents, FArchive,totalArchItem);
		summaryViewAdapter = new ArrayAdapter<String>(this, R.layout.summary,theSummary);
		arrangetodo = new ListArrange(this, Events);
		arrangearch = new ListArrange(this, archEvents);
		String theText=read(FText);
		MainText.setText(theText);
		listview.setAdapter(arrangetodo);
	}	  

	public void setsummary(){
		String temp="";
		int j;
		int checkTodo=0;
		int checkArItem=0;
		
		theSummary.clear();
    	for (j=0;j<totalEvent;j++){
    		if (Events.get(j).getChecked()){
    			checkTodo+=1;
    		}
    	}
    	for (j=0;j<totalArchItem;j++){
    		if (archEvents.get(j).getChecked()){
    			checkArItem+=1;
    		}
    	}
    	temp="Total items: "+(totalEvent+totalArchItem);
    	theSummary.add(temp);
    	temp="TODO items: "+totalEvent;
    	theSummary.add(temp);
    	temp="TODO items checked: "+checkTodo;
    	theSummary.add(temp);
    	temp="TODO items left unchecked: "+(totalEvent-checkTodo);
    	theSummary.add(temp);
    	temp="Archived TODO items: "+totalArchItem;
    	theSummary.add(temp);
    	temp="Checked archived TODO items: "+checkArItem;
    	theSummary.add(temp);
    	temp="Unchecked archived TODO items: "+(totalArchItem-checkArItem);
    	theSummary.add(temp);
	}
	
    public void save(View view){
		String text = MainText.getText().toString();
		Event a = new Event(text);
		Events.add(a);
		arrangetodo.notifyDataSetChanged();
		MainText.setText("");
		totalEvent+=1;

    }
    
    public void delete(View view){
    	int i;
    	for (i=0;i<totalEvent;i++){
    		if (Events.get(i).getChecked()){
    			Events.remove(i);
    			totalEvent-=1;
    			i-=1;
    		}
    	}
    	for (i=0;i<totalArchItem;i++){
    		if (archEvents.get(i).getChecked()){
    			archEvents.remove(i);
    			totalArchItem-=1;
    			i-=1;
    		}
    	}
    	arrangetodo.notifyDataSetChanged();
    	arrangearch.notifyDataSetChanged();

    }
    
    public void email(View view){
    	String emailText = "";
    	String temp="";
    	int i;
    	for (i=0;i<totalEvent;i++){
    		if (Events.get(i).getChecked()){
    			temp=Events.get(i).getBody().replaceAll("\n", "\n                    ");
    			emailText=emailText+"Todo item: "+temp+"\n";
    			
    		}
    	}
    	for (i=0;i<totalArchItem;i++){
    		if (archEvents.get(i).getChecked()){
    			temp=archEvents.get(i).getBody().replaceAll("\n", "\n                          ");
    			emailText=emailText+"Archived item: "+temp+"\n";
    		}
    	}
		write(emailText,FEmail);
		Intent intent = new Intent(MainActivity.this, Email.class);
		MainActivity.this.startActivity(intent);

        //String strTmp="email";  
        //MainText.setText(strTmp);  
    }
    public void archive(View view){
    	int j;
    	for (j=0;j<totalEvent;j++){
    		if (Events.get(j).getChecked()){
    			Events.get(j).setCheck(false);
    			archEvents.add(Events.get(j));
    			Events.remove(j);
    			totalEvent-=1;
    			totalArchItem+=1;
    			j-=1;
    		}
    	}
    	for (j=0;j<totalArchItem;j++){
    		if (archEvents.get(j).getChecked()){
    			archEvents.get(j).setCheck(false);
    			Events.add(archEvents.get(j));
    			archEvents.remove(j);
    			totalArchItem-=1;
    			totalEvent+=1;
    			j-=1;
    		}
    	}
    	arrangetodo.notifyDataSetChanged();
    	arrangearch.notifyDataSetChanged();
    }    
    public void todoview(View view){
		listview.setAdapter(arrangetodo);
    }
    public void archived(View view){
		listview.setAdapter(arrangearch);
    }
    public void summary(View view){
    	setsummary();
		summaryViewAdapter.notifyDataSetChanged();
		listview.setAdapter(summaryViewAdapter);
    }

	public void saveItems(List<Event> lts, String filename) {
        try {  
            FileOutputStream fos = openFileOutput(filename, MODE_PRIVATE);  
            ObjectOutputStream oos = new ObjectOutputStream(fos);
			oos.writeObject(lts);
            fos.close();  
        } catch (Exception e) {  
        	String ex = e.toString();
            MainText.setText(ex);
        }  
	}
    public int loadItems(ArrayList<Event> aim, String filename, int theSize) {
		ArrayList<Event> lts = new ArrayList<Event>();
        try {  
            FileInputStream inputStream = openFileInput(filename);  
			ObjectInputStream ois = new ObjectInputStream(inputStream);
			lts = (ArrayList<Event>) ois.readObject();
			inputStream.close();  

        } catch (Exception e) {  
        }
        aim.clear();
        int a;
        theSize=lts.size();
        for (a=0;a<theSize;a++){
        	aim.add(lts.get(a));
        }
        return theSize;
	}
    private String read(String filename) {  
        try {  
            FileInputStream inputStream = openFileInput(filename);  
            byte[] b = new byte[inputStream.available()];  
            inputStream.read(b);  
            return new String(b);  
        } catch (Exception e) {  
        }  
        return null;  
    }  
  
    private void write(String content,String filename) {  
        try {  
            FileOutputStream fos = openFileOutput(filename, MODE_PRIVATE);  
            fos.write(content.getBytes());  
            fos.close();  
        } catch (Exception e) {  
        }  
    }  
    
    protected void onStop(){
        super.onStop();  
		saveItems(Events, FTodoList);
		saveItems(archEvents, FArchive);
		String text = MainText.getText().toString();
		write(text,FText);
		

    }  

}