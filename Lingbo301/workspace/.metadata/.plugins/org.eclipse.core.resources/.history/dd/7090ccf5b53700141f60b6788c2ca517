package com.phonetester;

import com.diploma.R;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.LinearLayout;
import android.widget.Toast;

public class FullScreenActivity extends Activity {
        private LinearLayout mLayout;
        private int[] mColorsArray = { Color.WHITE, Color.BLACK, Color.RED,
                        Color.GREEN, Color.BLUE, Color.YELLOW, Color.MAGENTA, Color.CYAN,
                        Color.GRAY, Color.LTGRAY, Color.DKGRAY };
        private int mColorIndex = 0, mLightness = 100;
        private boolean isUpLight = false;
        private Handler mLightHandler;

        @Override
        protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                Intent i = getIntent();

                if (i.getBooleanExtra("brightnessfour", false)) {
                        setContentView(R.layout.brightness_four_fullscreen);

                        mLightHandler = new Handler() {
                                @Override
                                public void handleMessage(Message msg) {
                                        WindowManager.LayoutParams lp = getWindow().getAttributes();
                                        lp.screenBrightness = mLightness / 100.0f;
                                        getWindow().setAttributes(lp);
                                        if (isUpLight)
                                                mLightness++;
                                        else
                                                mLightness--;
                                        if (mLightness == 1 && !isUpLight)
                                                isUpLight = true;
                                        else if (mLightness == 100)
                                                isUpLight = false;
                                        mLightHandler.sendMessageDelayed(new Message(), 30);
                                }
                        };
                        new Thread() {
                                public void run() {
                                        mLightHandler.sendMessage(new Message());
                                }
                        }.start();

                } else if (i.getBooleanExtra("colorsone", false)) {
                        setContentView(R.layout.colors_one_fullscreen);
                } else if (i.getBooleanExtra("colorsthree", false)) {
                        setContentView(R.layout.colors_three_fullscreen);
                } else {
                        setContentView(R.layout.fullscreen);
                        mLayout = (LinearLayout) findViewById(R.id.fullscreenLayout);
                        if (i.getBooleanExtra("colorstwo", false)) {
                                mLayout.setBackgroundColor(mColorsArray[mColorIndex]);
                                Toast.makeText(FullScreenActivity.this,
                                                R.string.TouchToastText, Toast.LENGTH_LONG).show();
                                mLayout.setOnClickListener(new OnClickListener() {

                                        @Override
                                        public void onClick(View v) {
                                                mColorIndex++;
                                                if (mColorIndex == 11)
                                                        mColorIndex = 0;
                                                mLayout.setBackgroundColor(mColorsArray[mColorIndex]);
                                        }
                                });
                        } else {
                                mLayout.setBackgroundResource(i.getIntExtra("src", 0));
                                if (i.getBooleanExtra("landscape", false)) {
                                        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
                                }
                        }
                }
        }
}

